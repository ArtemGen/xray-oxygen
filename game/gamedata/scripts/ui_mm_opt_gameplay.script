class "opt_gameplay" (CUIWindow)

function opt_gameplay:__init() super()
end

function opt_gameplay:__finalize()

end

function opt_gameplay:InitControls(x, y, xml, handler)
	local ctl
	local _st

	self.scroll_g = xml:InitScrollView("tab_gameplay:scroll_g", self)
	
	self:SetWndPos(vector2():set(x,y))
	self:SetWndSize(vector2():set(738,416))
	self:SetAutoDelete(true)

	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_difficulty",		_st)
	xml:InitComboBox("tab_gameplay:list_difficulty",	_st)
	self.scroll_g:AddWindow(_st, true)
	
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_language",		_st)
	xml:InitComboBox("tab_gameplay:list_language",	_st)
	self.scroll_g:AddWindow(_st, true)
	
	--first line
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_tips",	_st)
	xml:InitCheck("tab_gameplay:check_tips",		_st) 	 		--tips
	xml:InitStatic("tab_gameplay:cap_check_crosshair",	_st)
	xml:InitCheck("tab_gameplay:check_crosshair",		_st) 		--crosshair
	self.scroll_g:AddWindow(_st, true)
	
	--second line
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_dyn_crosshair", _st)
	xml:InitCheck("tab_gameplay:check_dyn_crosshair", 	   _st) 	--dyn_crosshair
	xml:InitStatic("tab_gameplay:cap_check_show_weapon",_st)
	xml:InitCheck("tab_gameplay:check_show_weapon", 	_st)		--show_weapon
	self.scroll_g:AddWindow(_st, true)
	
	--third line
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_dist",		_st)
	xml:InitCheck("tab_gameplay:check_dist", 			_st) 		--check_dist
	xml:InitStatic("tab_gameplay:cap_check_crouch_toggle",	_st)
	xml:InitCheck("tab_gameplay:check_crouch_toggle",		_st) 	--crouch_toggle
	self.scroll_g:AddWindow(_st, true)
	
	--fourth line
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_check_important_save",	_st)
	xml:InitCheck("tab_gameplay:check_important_save", 		_st) 	--check_important_save
	xml:InitStatic("tab_gameplay:cap_check_hud_draw",	_st)
	xml:InitCheck("tab_gameplay:check_hud_draw",		_st) 		--hud_draw
	self.scroll_g:AddWindow(_st, true)
	
	--fifth line
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_hardcore_mode",	_st)
	xml:InitCheck("tab_gameplay:check_hardcore_mode",	_st) 		--hardcore mode

	xml:InitStatic("tab_gameplay:cap_colored_feel",		_st)
	xml:InitCheck("tab_gameplay:check_colored_feel",	_st)		--colored_feel
	self.scroll_g:AddWindow(_st, true)
	
	--sixth line
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_interface_clearsky",   _st)
	xml:InitCheck("tab_gameplay:check_interface_clearsky",	_st)	--interface clearsky
	xml:InitStatic("tab_gameplay:cap_car_info",		_st)
	xml:InitCheck("tab_gameplay:check_car_info",	_st)			--car info
	self.scroll_g:AddWindow(_st, true)
	
	--seventh line
	_st = xml:InitStatic("tab_gameplay:templ_item", nil)
	xml:InitStatic("tab_gameplay:cap_show_date",   _st)				
	xml:InitCheck("tab_gameplay:check_show_date",	_st)			--show date
	xml:InitStatic("tab_gameplay:cap_loadingscreen_custom",		_st)
	xml:InitCheck("tab_gameplay:check_loadingscreen_custom",	_st)--Loading Screen V.2
	self.scroll_g:AddWindow(_st, true)
	
	

end
