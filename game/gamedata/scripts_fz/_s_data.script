--[[ ------------------------------------------------------------------------------------------------
 File       : _sData.script
 Description: вывод статистики/информации
 Copyright  : 2009 Singapur22
 Author     : Singapur22, Gun12
 Last edit  : 25.11.2012 (Viнt@rь)
--]] ------------------------------------------------------------------------------------------------
--/											Variables
--]] ------------------------------------------------------------------------------------------------
local timer = 0
local position_showed = false
local custom_statics_showed = false
local custom_statics = {"prs_debug", "gul_debug", "zon_debug", "act_debug", "ach_debug", "slots_debug"}
--[[---------------------------------------------------------------
--// settings
--]]---------------------------------------------------------------
local position		= true  -- включение схемы показа координат
local infos			= false	-- включение схемы показа состояний инфопоршнэй
local gulags		= false	-- включение схемы показа численности гулагов
local zones			= false	-- включение схемы показа попадания ГГ в зону
local actor_info	= true  -- включение всей схемы показа данных ГГ.
local achivements	= false	-- включение схемы показа счетчиков новых амчивок
local slots			= true	-- включение всей схемы показа состояния предметов в активных слотах

--[[---------------------------------------------------------------
--// Инфопоршни
--]]---------------------------------------------------------------
--[[
--	Проверка состояний инфопоршнэй, с выводом результата на монитор.
--	Возможна проверка не ограниченного колличества инфопоршнэй, одновременно.
--	Отключать схему не обязательно. При пустой таблице, схема не показывается.
--	id инфопоршней, писать в кавычках, через запятую.
--	Пример: local infos_table = {"info1","info2","info3"}
--]]
local infos_table = {}

--[[---------------------------------------------------------------
--// Гулаги
--]]---------------------------------------------------------------
--[[
--	Проверка численности гулагов, с выводом результата на монитор.
--	Возможна проверка не ограниченного колличества гулагов, одновременно.
--	Результат выводится не зависимо от того, находятся нпс в online или offline.
--	Но только, если локация, на которой гулаг находится, активна.
--	Отключать схему не обязательно. При пустой таблице, схема не показывается.
--	Имена гулагов, писать в кавычках, через запятую.
--	Пример: local gulags_table = {"name1","name2","name3"}
--]]
local gulags_table = {}

--[[---------------------------------------------------------------
--// Зоны(гулаги, смарт_террейны)
--]]---------------------------------------------------------------
--[[
--	Проверка попадания ГГ в зону, с выводом результата на монитор.
-- 	Возможна проверка не ограниченного колличества зон, одновременно.
-- 	Отключать схему не обязательно. При пустой таблице, схема не показывается.
-- 	Имена зон (гулаги, смарт_террейны) писать в кавычках, через запятую.
-- 	Пример: local zones_table = {"name1","name2","name3"}
--]]
local zones_table = {}

--[[---------------------------------------------------------------
--// Актор(настройки отображений состояний актора)
--]]---------------------------------------------------------------
local health		= true	-- включение показа здоровья
local power			= true	-- включение показа силы
local radiation 	= true	-- включение показа радиационного облучения
local satiety		= false	-- включение показа сытости
local money			= true	-- включение показа суммы наличных (денег)
local health_psy	= true	-- включение показа пси-здоровья
local morale		= true	-- включение показа морали
local rank			= false	-- включение показа ранга
local community		= true	-- включение показа группировки
local reputation	= true	-- включение показа репутации

--]] ------------------------------------------------------------------------------------------------
--/											Initialize
--]] ------------------------------------------------------------------------------------------------
function Init()
	event("ActorUpdate"):register(Update)
	event("NpcDestroy"):register(DestroyTarget)
	event("NpcDeath"):register(DestroyTarget)
	event("MonsterDestroy"):register(DestroyTarget)
	event("MonsterDeath"):register(DestroyTarget)
end
--]] ------------------------------------------------------------------------------------------------
--/											Functions
--]] ------------------------------------------------------------------------------------------------
--[[---------------------------------------------------------------
--// Обновление статистики
--]]---------------------------------------------------------------
function Update()
	if timer < time_global() then 
		timer = time_global() + 1000
		
		local debug = ReadVar("debug", debug_values["debug"]) -- включен ли дебаг режим вообще
		local info = ReadVar("info", debug_values["info"]) -- включено ли отображение отлад. информ. на экране
		
		if debug and info then
			UpdateActorInfo()
			UpdateHudTargets(debug, info)
		else
			if position_showed then
				local hud = get_hud()
				hud:RemoveCustomStatic("cs_debug")
				position_showed = false
				
				if custom_statics_showed then
					if next(custom_statics) then
						for i, cs in ipairs(custom_statics) do
							if hud:GetCustomStatic(cs) then hud:RemoveCustomStatic(cs) end
						end
					end
					custom_statics_showed = false
				end
			end
		end
	end
end
--[[---------------------------------------------------------------
--// Статистика(вывод/показ)
--]]---------------------------------------------------------------
function UpdateActorInfo()
	local actor = db.actor
	local hud = get_hud()

	if position then
		local position_cs = hud:GetCustomStatic("cs_debug")
		if not position_cs then
			hud:AddCustomStatic("cs_debug", true)
			position_cs = hud:GetCustomStatic("cs_debug")
		end
		local lvid, gvid = actor:level_vertex_id(), actor:game_vertex_id()
		local pos, cam_dir, cam_pos = actor:position(), device().cam_dir, device().cam_pos
		local valid = level.vertex_position(lvid):distance_to(pos) <= 0.7
		local cam_dirH = cam_dir:getH()
		local text = string.format("lvid: %d\\n",lvid)..						-- левел вертекс
					string.format("gvid: %d\\n",gvid)..							-- гейм вертекс
					string.format("pos: %f,%f,%f\\n", pos.x, pos.y, pos.z)..	-- позиция ГГ (x,y,z)
					string.format("cam_pos: %f,%f,%f\\n", cam_pos.x, cam_pos.y, cam_pos.z)..	-- позиция камеры (x,y,z)
					string.format("cam_dir: %f,%f,%f\\n", cam_dir.x, cam_dir.y, cam_dir.z)..	-- позиция камеры (x,y,z)
					string.format("cam_dirH: %f\\n", cam_dirH)..
					string.format("valid: %s", valid)							-- наличие AI-сетки в данной координате
					
		if position_cs then position_cs:wnd():TextControl():SetText(text) end
		
		position_showed = true
	end
	
	if not ReadVar("info_full", debug_values["info_full"]) then
		if custom_statics_showed then
			if next(custom_statics) then
				for k, cs in ipairs(custom_statics) do
					if hud:GetCustomStatic(cs) then hud:RemoveCustomStatic(cs) end
				end
			end
			custom_statics_showed = false
		end
		return 
	end

	custom_statics_showed = true
	if infos then
		local infos_cs = hud:GetCustomStatic("prs_debug")
		if not infos_cs then
			hud:AddCustomStatic("prs_debug", true)
			infos_cs = hud:GetCustomStatic("prs_debug")
		end
		local infos_text = "" 
		for k, id in ipairs(infos_table) do
			if not has_alife_info(id) then
				infos_text = infos_text..string.format("%s\\n", tostring(id.." = "..tostring(has_alife_info(id))))
			end
		end
		if infos_cs then infos_cs:wnd():TextControl():SetText(infos_text) end
	end

	if gulags then
		local gulags_cs = hud:GetCustomStatic("gul_debug")
		if not gulags_cs then
			hud:AddCustomStatic("gul_debug", true)
			gulags_cs = hud:GetCustomStatic("gul_debug")
		end
		local gulags_text = "" 
		for k, name in ipairs(gulags_table) do
			if getGulagPopulationComed(name) then
				gulags_text = gulags_text..string.format("%s\\n", tostring(name.." = "..tostring(GetGulagPopulation(name))))
			end
		end
		if gulags_cs then gulags_cs:wnd():TextControl():SetText(gulags_text) end
	end

	if zones then
		local zones_cs = hud:GetCustomStatic("zon_debug")
		if not zones_cs then
			hud:AddCustomStatic("zon_debug", true)
			zones_cs = hud:GetCustomStatic("zon_debug")
		end
		local zones_text = "" 
		for k, name in ipairs(zones_table) do			
			if utils.npc_in_zone(actor, db.zone_by_name[name]) then
				zones_text = zones_text..string.format("%s\\n", tostring(name.." = "..tostring(utils.npc_in_zone(actor, db.zone_by_name[name]))))
			end
		end
		if zones_cs then zones_cs:wnd():TextControl():SetText(zones_text) end
	end

	if actor_info then
		local actor_cs = hud:GetCustomStatic("act_debug")
		if not actor_cs then
			hud:AddCustomStatic("act_debug", true)
			actor_cs = hud:GetCustomStatic("act_debug")
		end
		local actor_text = ""
		if health then
			local str = string.format(" %1.3f", actor.health)
			actor_text = actor_text..GetString("sdata_actor_health")..tostring(str).."("..math.ceil(tonumber(str) * 100).."%)\\n"
		end
		if power then
			local str = string.format(" %1.3f", actor.power)
			actor_text = actor_text..GetString("sdata_actor_power")..tostring(str).." ("..math.ceil(tonumber(str) * 100).."%)\\n"
		end
		if radiation then
			local str = string.format(" %1.3f", actor.radiation)
			actor_text = actor_text..GetString("sdata_actor_radiation")..tostring(str).." ("..math.ceil(tonumber(str) * 100).."%)\\n"
		end
		if satiety then
			local str = string.format(" %1.3f", actor.satiety)
			actor_text = actor_text..GetString("sdata_actor_satiety")..tostring(str).." ("..math.ceil(tonumber(str) * 100).."%)\\n"
		end
		if money then
			actor_text = actor_text..string.format(GetString("sdata_actor_money").." %d\\n", actor:money())
		end
		if health_psy then
			local str = string.format(" %1.3f", actor.psy_health)
			actor_text = actor_text..GetString("sdata_actor_psy_health")..tostring(str).." ("..math.ceil(tonumber(str) * 100).."%)\\n"
		end
		if morale then
			actor_text = actor_text..string.format(GetString("sdata_actor_morale").." %s\\n", tostring(actor.morale))
		end
		if rank then
			-- TODO
		end
		if community then
			actor_text = actor_text..string.format(GetString("sdata_actor_community").." %s\\n", tostring(actor:character_community()))
		end
		if reputation then
			actor_text = actor_text..string.format(GetString("sdata_actor_reputation").." %d\\n", actor:character_reputation())
		end
		if actor_cs then actor_cs:wnd():TextControl():SetText(actor_text) end
	end
	
	if achivements then
		local achivements_cs = hud:GetCustomStatic("ach_debug")
		if not achivements_cs then
			hud:AddCustomStatic("ach_debug", true)
			achivements_cs = hud:GetCustomStatic("ach_debug")
		end
		local achivements_text = ""
		if achivements_cs then achivements_cs:wnd():TextControl():SetText(achivements_text) end
	end

	if slots then
		local slots_cs = hud:GetCustomStatic("slots_debug")
		if not slots_cs then
			hud:AddCustomStatic("slots_debug", true)
			slots_cs = hud:GetCustomStatic("slots_debug")
		end
		local slots_text = ""
		for i = 1, 12 do
			local name_str = ""
			local cond_str = ""
			if i == 2 or i == 3 or i == 7 or i == 12 then
				local slot = actor:item_in_slot(i)
				if slot then
					name_str = string.format("%s\\n", GetString(GetItemName(slot:section())))
					cond_str = string.format("Состояние: %1.2f\\n", slot:condition())
				else
					name_str = "пуст"
				end
				slots_text = slots_text.."Слот "..i..": "..name_str.."\\n"..cond_str.."\\n\\n"
			end
		end
		if slots_cs then slots_cs:wnd():TextControl():SetText(slots_text) end
	end
end

-- Utils
-- @param id - gulag id or name
function GetGulagPopulation(id)
	local gulag = xr_gulag.get_gulag(id)
	return (gulag and gulag:get_population_comed()) or 0
end
-----------------------------------------------------------------------------------------------------
--[[---------------------------------------------------------------
--// 			Инфа о цели (amk_target © AMK-team)
--]]---------------------------------------------------------------
--[[---------------------------------------------------------------
--// 						Variables
--]]---------------------------------------------------------------
local targets_params = {
	lock = 4,		-- количество сопровождаемых целей
	view = 4,		-- количество отображаемых целей
	range = 300,	-- дистанция обраружения
}

-- Текущее состояние детектора целей
local targets = {} -- отображаемые цели и соответствующие hud объекты
local updated = false
--[[---------------------------------------------------------------
--// 						Functions
--]]---------------------------------------------------------------
-- Обновляет прицельные метки
function UpdateHudTargets(debug, info)
	if ReadVar("info_target", debug_values["info_target"]) and debug and info then
		CheckHudTargets()
		-- массив targets инициализирован
		ScanTargets() -- пересканировать всю живность и возможно обновить targets
		TrackTargets() -- переместить метки целей и, возможно, выбрать другую цель
	elseif next(targets) then
		for i = 1, targets_params.view do
			RemoveHudTarget(i)
		end
		targets = {}
	end
end

function ScanTargets()
	local best_targets = {}
	for i = 1, targets_params.lock do
		table.insert(best_targets, {threat = -1000000})
	end
	local cam_pos = device().cam_pos
	local cam_dir = device().cam_dir
	for id, object in pairs(db.storage) do
		local obj = db.storage[id].object
		if obj and (IsStalker(obj) or IsMonster(obj)) and obj:alive() then
			local r = obj:position():sub(cam_pos) -- радиус-вектор цели
			local dp = r:dotproduct(cam_dir)
			if r:magnitude() < targets_params.range and id ~= db.actor:id() then
				local threat = 1
				local it = {threat = threat / r:magnitude(), obj = obj, distance = r:magnitude(), id = id}
				if threat_comp(it, best_targets[targets_params.lock]) then
					table.insert(best_targets, it)
					table.sort(best_targets, threat_comp)
					table.remove(best_targets)
					-- звук при обнаружении новой цели
					--local snd_obj = sound_object("detectors\contact_9")
					--snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
				end
			end
		end
	end
	for i = 1, targets_params.view do
		targets[i].obj = best_targets[i].obj
		targets[i].distance = best_targets[i].distance
		targets[i].id = best_targets[i].id
	end
	updated = true
end

function TrackTargets()
	local cam_pos = device().cam_pos
	local cam_dir = device().cam_dir
	for i, target in pairs(targets) do
		local obj = target.obj
		local best_r = obj and obj:bone_position("bip01_head"):sub(cam_pos)
		local best_dp = obj and cam_dir:dotproduct(best_r)
		if not obj or best_dp <= 0 then -- TODO: убирать метку
			target.wnd:SetWndPos(vector2():set(-100, -100))
		else
			-- Рассчитываем экранные координаты
			best_r.y = best_r.y + 0.25
			local fov2 = device().fov / 180 * math.pi / 2
			local fovmul = math.tan(fov2) / device().aspect_ratio
			local cr, ct = device().cam_right, device().cam_top
			-- проецируем на экранную плоскость
			local x = cr:dotproduct(best_r)
			local y = ct:dotproduct(best_r)
			-- масштабируем по расстоянию и преобразуем в экранные координаты
			x = 512 - 32 + 512 / fovmul * x / best_dp
			y = 768 / 2 - 32 - 512 / fovmul * y / best_dp
			-- перемещаем метку
			target.wnd:SetWndPos(vector2():set(x, y))
			if updated then
				local dist = db.storage[obj:id()] and db.storage[obj:id()].active_section
				local txt = string.format("dist:%.1f group:%s\\n%s", target.distance, tostring(obj:group()), tostring(dist))
				target.wnd:TextControl():SetTextST(txt)
			end
		end
	end
	updated = false
end

-- Коллбэк на уход в оффлайн или уничтожение
function DestroyTarget(data) -- вызов из "on_net_destroy"
	if ReadVar("info_target", debug_values["info_target"]) and data and next(targets) then
		local id = (data.obj and data.obj:id()) or (data.victim and data.victim:id())
		for i = 1, targets_params.view do
			if targets[i] and targets[i].id == id then
				RemoveHudTarget(i)
				targets[i].obj = nil
				targets[i].id = 0
			end
		end
	end
end

--[[---------------------------------------------------------------
--// 						Utils
--]]---------------------------------------------------------------
function CheckHudTargets()
	local hud = get_hud()
	for i = 1, targets_params.view do
		local cs
		while true do
			cs = hud:GetCustomStatic("hud_target"..i)
			if cs then
				break
			else
				hud:AddCustomStatic("hud_target"..i)
			end
		end
		if not targets[i] then targets[i] = {} end
		targets[i].wnd = cs:wnd()
	end
end

function RemoveHudTarget(num)
	local cs = get_hud():GetCustomStatic("hud_target"..num)
	if cs then
		get_hud():RemoveCustomStatic("hud_target"..num)
	end
end

-- возвращает true если i1 опаснее i2
function threat_comp(i1, i2)
	return i1.threat > i2.threat
end
--]] ------------------------------------------------------------------------------------------------
--/											Functions
--]] ------------------------------------------------------------------------------------------------