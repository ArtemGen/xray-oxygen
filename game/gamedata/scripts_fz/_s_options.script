--[[ ------------------------------------------------------------------------------------------------
 File       : _s_options.script
 Description: Debug functions(скрипт в релиз не совать!)
 Copyright  : 2012-2014 © FrostyTech
 Author     : Viнt@rь   
 Last edit  : 04.06.2018 (Viнt@rь)
--]] ------------------------------------------------------------------------------------------------
class "CDebugOptions" (CUIScriptWnd)
function CDebugOptions:__init(owner) super()
	self.owner = owner
	
	self:InitControls()
	self:InitCallBacks()
	self:UpdateControls()
end
function CDebugOptions:__finalize() end

function CDebugOptions:InitControls()
	self:SetWndRect(Frect():set(0, 0, 1024, 768))
	
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_debug_options.xml")
	if self.owner then
		xml:InitStatic("background", self)
	end
	self.form = xml:InitStatic("form", self)
	
	self.debug_check_box = xml:InitCheck("form:debug_check_box", self.form)
	self.debug_check_box:SetCheck(ReadVar("debug", debug_values["debug"]))

	self.console_check_box = xml:InitCheck("form:console_check_box", self.form)
	self.console_check_box:SetCheck(ReadVar("log", debug_values["log"]))
	
	self.news_check_box = xml:InitCheck("form:news_check_box", self.form)
	self.news_check_box:SetCheck(ReadVar("news", debug_values["news"]))

	self.printf_check_box = xml:InitCheck("form:printf_check_box", self.form)
	self.printf_check_box:SetCheck(ReadVar("printf", debug_values["printf"]))
			
	self.abort_check_box = xml:InitCheck("form:abort_check_box", self.form)
	self.abort_check_box:SetCheck(ReadVar("abort", debug_values["abort"]))
	
	self.check_save_load_check_box = xml:InitCheck("form:check_save_load_check_box", self.form)
	self.check_save_load_check_box:SetCheck(ReadVar("check_save_load", debug_values["check_save_load"]))

	local index = 0
	for i = 1, #debug_scripts do
		if _G[debug_scripts[i]] and _G[debug_scripts[i]]._log then
			index = index + 1
	
			self["script_check_box_" .. i] = xml:InitCheck("form:script_check_box_" .. index, self.form)
			self["script_check_box_" .. i]:TextControl():SetText(debug_scripts[i] .. ":")
			self["script_check_box_" .. i]:SetWndPos(vector2():set(252, 50 + (index * 20)))
			self["script_check_box_" .. i]:SetCheck(ReadVar(debug_scripts[i], true))
	
			self:Register(self["script_check_box_" .. i], "script_check_box_" .. i)
		end
	end
		
	self.debug_info_check_box = xml:InitCheck("form:debug_info_check_box", self.form)
	self.debug_info_check_box:SetCheck(ReadVar("info", debug_values["info"]))
	
	self.debug_info_full_check_box = xml:InitCheck("form:debug_info_full_check_box", self.form)
	self.debug_info_full_check_box:SetCheck(ReadVar("info_full", debug_values["info_full"]))
	
	self.debug_info_target_check_box = xml:InitCheck("form:debug_info_target_check_box", self.form)
	self.debug_info_target_check_box:SetCheck(ReadVar("info_target", debug_values["info_target"]))

	self.close_button = xml:Init3tButton("form:close_button", self.form)
				
	self:Register(self.debug_check_box,				"debug_check_box")
	self:Register(self.console_check_box,			"console_check_box")
	self:Register(self.news_check_box,				"news_check_box")
	self:Register(self.printf_check_box,			"printf_check_box")
	self:Register(self.abort_check_box,				"abort_check_box")
	self:Register(self.check_save_load_check_box,	"check_save_load_check_box")
	self:Register(self.debug_info_check_box, 		"debug_info_check_box")
	self:Register(self.debug_info_full_check_box,	"debug_info_full_check_box")
	self:Register(self.debug_info_target_check_box,	"debug_info_target_check_box")
	self:Register(self.close_button, 				"close_button")
end

function CDebugOptions:InitCallBacks()
	self:AddCallback("debug_check_box",				ui_events.BUTTON_CLICKED, 			self.OnDebugCheckBoxClick,				self)
	self:AddCallback("console_check_box",			ui_events.BUTTON_CLICKED, 			self.OnConsoleCheckBoxClick,			self)
	self:AddCallback("news_check_box",				ui_events.BUTTON_CLICKED, 			self.OnNewsCheckBoxClick,				self)
	self:AddCallback("printf_check_box",			ui_events.BUTTON_CLICKED, 			self.OnPrintfCheckBoxClick,				self)
	self:AddCallback("abort_check_box",				ui_events.BUTTON_CLICKED, 			self.OnAbortCheckBoxClick,				self)
	self:AddCallback("check_save_load_check_box",	ui_events.BUTTON_CLICKED, 			self.OnCheckSaveLoadCheckBoxClick,		self)
	self:AddCallback("debug_info_check_box",		ui_events.BUTTON_CLICKED, 			self.OnDebugInfoCheckBoxClick,			self)
	self:AddCallback("debug_info_full_check_box",	ui_events.BUTTON_CLICKED, 			self.OnDebugInfoFullCheckBoxClick,		self)
	self:AddCallback("debug_info_target_check_box",	ui_events.BUTTON_CLICKED, 			self.OnDebugInfoTargetCheckBoxClick,	self)
	for i = 1, #debug_scripts do
		if _G[debug_scripts[i]]._log then
			self["OnScriptCheckBoxClick_" .. i] = function() self:OnScriptCheckBoxClick(i) end
			self:AddCallback("script_check_box_" .. i, ui_events.BUTTON_CLICKED, self["OnScriptCheckBoxClick_" .. i], self)
		end
	end
	self:AddCallback("close_button", 				ui_events.BUTTON_CLICKED, 			self.OnCloseButtonClick,				self)
end

function CDebugOptions:UpdateControls()
	local debug = self.debug_check_box:GetCheck()
	local info = self.debug_info_check_box:GetCheck()
	
	self.console_check_box:Show(debug)
	self.news_check_box:Show(debug)
	self.printf_check_box:Show(debug)
	self.abort_check_box:Show(debug)
	self.check_save_load_check_box:Show(debug)
	
	for i = 1, #debug_scripts do
		if _G[debug_scripts[i]]._log_db or _G[debug_scripts[i]]._log then
			self["script_check_box_" .. i]:Show(debug)
		end
	end
	
	self.debug_info_check_box:Show(debug)
	self.debug_info_full_check_box:Show(debug and info)
	self.debug_info_target_check_box:Show(debug and info)
end

function CDebugOptions:OnDebugCheckBoxClick()
	WriteVar("debug", self.debug_check_box:GetCheck())
	self:UpdateControls()
end

function CDebugOptions:OnConsoleCheckBoxClick()
	WriteVar("log", self.console_check_box:GetCheck())
end

function CDebugOptions:OnPrintfCheckBoxClick()
	WriteVar("printf", self.printf_check_box:GetCheck())
end

function CDebugOptions:OnNewsCheckBoxClick()
	WriteVar("news", self.news_check_box:GetCheck())
end

function CDebugOptions:OnAbortCheckBoxClick()
	WriteVar("abort", self.abort_check_box:GetCheck())
end

function CDebugOptions:OnCheckSaveLoadCheckBoxClick()
	WriteVar("check_save_load", self.check_save_load_check_box:GetCheck())
end

function CDebugOptions:OnDebugInfoCheckBoxClick()
	WriteVar("info", self.debug_info_check_box:GetCheck())
	
	local info = self.debug_info_check_box:GetCheck()
	self.debug_info_full_check_box:Show(info)
	self.debug_info_target_check_box:Show(info)
end

function CDebugOptions:OnDebugInfoFullCheckBoxClick()
	WriteVar("info_full", self.debug_info_full_check_box:GetCheck())
end

function CDebugOptions:OnDebugInfoTargetCheckBoxClick()
	WriteVar("info_target", self.debug_info_target_check_box:GetCheck())
end

function CDebugOptions:OnScriptCheckBoxClick(index)
	WriteVar(debug_scripts[index], self["script_check_box_" .. index]:GetCheck())
end

function CDebugOptions:OnCloseButtonClick()
	self:HideDialog()
	
	if self.owner then
		self.owner:ShowDialog(true)
		self.owner:Show(true)
	end
end

function CDebugOptions:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE then
			self:OnCloseButtonClick()
		end
	end
	return true
end