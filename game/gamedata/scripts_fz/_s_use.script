--[[ ------------------------------------------------------------------------------------------------
 File       : _s_use.script
 Description: Ћбработка использованиЯ предметов.
 Copyright  : 2012-2014 © FrostyTech
 Author     : Viнt@rь
 Last edit  : 04.06.2018
--]] ------------------------------------------------------------------------------------------------
--/											Variables
--]] ------------------------------------------------------------------------------------------------
--]] ------------------------------------------------------------------------------------------------
--/											Initialize
--]] ------------------------------------------------------------------------------------------------
function Init()
	event("ItemUse"):register(OnItemUse)
	event("ItemUse[drug_anabiotic]"):register(OnAntibioticUsed)
end
--]] ------------------------------------------------------------------------------------------------
--/											Callback`s
--]] ------------------------------------------------------------------------------------------------
function OnItemUse(data)
	event("ItemUse["..data.item:section().."]"):trigger({item = data.item})
end

--[[
--	Ћбработка использованиЯ анабиотика
--]]
function OnAntibioticUsed()
	xr_effects.disable_ui_only(db.actor, nil)
	level.add_cam_effector("camera_effects\\surge_02.anm", 10, false, "_s_use.AnabioticProcess")
	level.add_pp_effector("surge_fade.ppe", 11, false)
	give_info("anabiotic_in_process")
	_G.mus_vol = get_console():get_float("snd_volume_music")
	_G.amb_vol = get_console():get_float("snd_volume_eff")
	get_console():execute("snd_volume_music 0")
	get_console():execute("snd_volume_eff 0")
end

function AnabioticProcess()
	level.add_cam_effector("camera_effects\\surge_01.anm", 10, false, "_s_use.AnabioticUseEnd")
	local random_minutes = math.random(35, 45)
	local surge_manager = surge_manager.get_surge_manager()
	if surge_manager.started then
		local time_factor = level.get_time_factor()
		local diff_sec = math.ceil(game.get_game_time():diffSec(surge_manager.inited_time) / time_factor)
		if random_minutes > (surge_manager.surge_time - diff_sec) * time_factor / 60 then
			surge_manager.time_forwarded = true
			surge_manager.ui_disabled = true
			surge_manager:kill_all_unhided()
			surge_manager:end_surge()
		end
	end
	level.change_game_time(0, 0, random_minutes)
	level_weathers.get_weather_manager():forced_weather_change()
end

function AnabioticUseEnd()
	xr_effects.enable_ui(db.actor, nil)
    get_console():execute("snd_volume_music "..tostring(_G.mus_vol))
	get_console():execute("snd_volume_eff "..tostring(_G.amb_vol))
	_G.amb_vol = 0
	_G.mus_vol = 0
	disable_info("anabiotic_in_process")
end

--]] ------------------------------------------------------------------------------------------------
--/											Functions
--]] ------------------------------------------------------------------------------------------------